#!/usr/bin/env ruby

require File.dirname(__FILE__) + '/../lib/gridpaper'


# :name is optional, otherwise uses the basename of this executable
program :name, 'Gridpaper'
program :version, Gridpaper::VERSION
program :description, 'A CSS Framework Built On Top of SASS'


command :generate do |c|
  # Describe this command
  c.syntax = 'gridpaper generate <path>'
  c.description = 'Creates a new gridpaper project'

  # options
  c.option '--scss', 'Use the alternate SCSS sytnax'
  c.option '--stylesheets-dir STRING', String, 'Use a different directory to hold your stylesheets'

  c.action do |args, options|
    path = args[0] || "."
    options.scss ? syntax = :scss : syntax = :sass
    stylesheets_dir = options.stylesheets_dir || "stylesheets"
    puts stylesheets_dir

    Gridpaper::Generate.new(path, stylesheets_dir, syntax)
  end

end

command :watch do |c|
  c.syntax = 'gridpaper watch'
  c.description = 'Watches for changes in your input file and generates CSS to your output file.'

  # c.option '--stylesheets-dir STRING', String, 'Use a different directory to hold your stylesheets'

  c.action do |args, options|
    stylesheets_dir = options.stylesheets_dir || "stylesheets"
    # working_path = Dir.pwd

    input_path = args[0] || "stylesheets/sass"
    # input_path = File.expand_path File.join(working_path, input_path)
    output_path = args[1] || "../stylesheets"
    # output_path = File.expand_path File.join(working_path, output_path)

    Gridpaper::Watch.new(input_path, output_path)
  end

end

def check_input_path(working_path)
  unless File.exists?(File.join(working_path, 'sass')) || File.exists?(File.join(working_path, 'scss'))
    puts "Could not find a directory named './#{ stylesheets_dir }/sass' or './#{ stylesheets_dir }/scss'. Aborting.".red
    return false
  end
end

alias_command :g, :generate
alias_command :new, :generate
alias_command :setup, :generate
alias_command :add, :generate
